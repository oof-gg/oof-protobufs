syntax = "proto3";

package game;

import "player/player.proto";

/// Represents a game session, can be used to store game state and attributes such as scores, times, players, and active in-game configurations.
message Session {
  string id = 1;
  string game_id = 2;
  /// Players in the session (can be used to store player state and attributes)
  /// TODO: Determine if player references should be retrieved in full or just the player IDs.
  /// Optional: This can be used to store player state and attributes, but not recommended for large player counts.
  repeated player.Player players = 3; 
  GameState state = 4;
  map<string, GameAttribute> attributes = 5; // Game attributes

  enum GameState {
    CREATED = 0;
    WAITING = 1;
    STARTED = 2;
    FINISHED = 3;
  }

  //TODO: Check if this is the best way to represent game attributes
  message GameAttribute {
    /// Value of the attribute
    oneof value {
      string string_value = 2;
      int32 int_value = 3;
      float float_value = 4;
      bool bool_value = 5;
    }
  }
}