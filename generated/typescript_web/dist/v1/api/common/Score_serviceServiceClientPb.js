"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for v1.api.common
 * @enhanceable
 * @public
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScoreServiceClient = void 0;
// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.14.0
// source: v1/api/common/score_service.proto
/* eslint-disable */
// @ts-nocheck
const grpcWeb = require("grpc-web");
const v1_api_score_score_pb = require("../../../v1/api/score/score_pb"); // proto import: "v1/api/score/score.proto"
class ScoreServiceClient {
    constructor(hostname, credentials, options) {
        this.methodDescriptorSubmitScore = new grpcWeb.MethodDescriptor('/v1.api.common.ScoreService/SubmitScore', grpcWeb.MethodType.UNARY, v1_api_score_score_pb.ScoreSubmission, v1_api_score_score_pb.StandardResponse, (request) => {
            return request.serializeBinary();
        }, v1_api_score_score_pb.StandardResponse.deserializeBinary);
        this.methodDescriptorGetPlayerScores = new grpcWeb.MethodDescriptor('/v1.api.common.ScoreService/GetPlayerScores', grpcWeb.MethodType.UNARY, v1_api_score_score_pb.PlayerScoresRequest, v1_api_score_score_pb.PlayerScoresResponse, (request) => {
            return request.serializeBinary();
        }, v1_api_score_score_pb.PlayerScoresResponse.deserializeBinary);
        this.methodDescriptorGetLeaderboard = new grpcWeb.MethodDescriptor('/v1.api.common.ScoreService/GetLeaderboard', grpcWeb.MethodType.UNARY, v1_api_score_score_pb.LeaderboardRequest, v1_api_score_score_pb.Leaderboard, (request) => {
            return request.serializeBinary();
        }, v1_api_score_score_pb.Leaderboard.deserializeBinary);
        this.methodDescriptorGetPlayerRank = new grpcWeb.MethodDescriptor('/v1.api.common.ScoreService/GetPlayerRank', grpcWeb.MethodType.UNARY, v1_api_score_score_pb.PlayerRankRequest, v1_api_score_score_pb.PlayerRankResponse, (request) => {
            return request.serializeBinary();
        }, v1_api_score_score_pb.PlayerRankResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname.replace(/\/+$/, '');
        this.credentials_ = credentials;
        this.options_ = options;
    }
    submitScore(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/v1.api.common.ScoreService/SubmitScore', request, metadata || {}, this.methodDescriptorSubmitScore, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/v1.api.common.ScoreService/SubmitScore', request, metadata || {}, this.methodDescriptorSubmitScore);
    }
    getPlayerScores(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/v1.api.common.ScoreService/GetPlayerScores', request, metadata || {}, this.methodDescriptorGetPlayerScores, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/v1.api.common.ScoreService/GetPlayerScores', request, metadata || {}, this.methodDescriptorGetPlayerScores);
    }
    getLeaderboard(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/v1.api.common.ScoreService/GetLeaderboard', request, metadata || {}, this.methodDescriptorGetLeaderboard, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/v1.api.common.ScoreService/GetLeaderboard', request, metadata || {}, this.methodDescriptorGetLeaderboard);
    }
    getPlayerRank(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/v1.api.common.ScoreService/GetPlayerRank', request, metadata || {}, this.methodDescriptorGetPlayerRank, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/v1.api.common.ScoreService/GetPlayerRank', request, metadata || {}, this.methodDescriptorGetPlayerRank);
    }
}
exports.ScoreServiceClient = ScoreServiceClient;
