// source: v1/api/game/session.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_std_regions_pb = require('../../../v1/std/regions_pb.js');
goog.object.extend(proto, v1_std_regions_pb);
goog.exportSymbol('proto.v1.api.game.GameAttribute', null, global);
goog.exportSymbol('proto.v1.api.game.GameAttribute.ValueCase', null, global);
goog.exportSymbol('proto.v1.api.game.GameState', null, global);
goog.exportSymbol('proto.v1.api.game.Session', null, global);
goog.exportSymbol('proto.v1.api.game.SessionCreate', null, global);
goog.exportSymbol('proto.v1.api.game.SessionDelete', null, global);
goog.exportSymbol('proto.v1.api.game.SessionGet', null, global);
goog.exportSymbol('proto.v1.api.game.SessionUpdate', null, global);
goog.exportSymbol('proto.v1.api.game.Sessions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.GameAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.api.game.GameAttribute.oneofGroups_);
};
goog.inherits(proto.v1.api.game.GameAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.GameAttribute.displayName = 'proto.v1.api.game.GameAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.Session = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.api.game.Session.repeatedFields_, null);
};
goog.inherits(proto.v1.api.game.Session, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.Session.displayName = 'proto.v1.api.game.Session';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.SessionCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.api.game.SessionCreate.repeatedFields_, null);
};
goog.inherits(proto.v1.api.game.SessionCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.SessionCreate.displayName = 'proto.v1.api.game.SessionCreate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.SessionUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.api.game.SessionUpdate.repeatedFields_, null);
};
goog.inherits(proto.v1.api.game.SessionUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.SessionUpdate.displayName = 'proto.v1.api.game.SessionUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.SessionGet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.api.game.SessionGet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.SessionGet.displayName = 'proto.v1.api.game.SessionGet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.SessionDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.api.game.SessionDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.SessionDelete.displayName = 'proto.v1.api.game.SessionDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.api.game.Sessions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.api.game.Sessions.repeatedFields_, null);
};
goog.inherits(proto.v1.api.game.Sessions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.api.game.Sessions.displayName = 'proto.v1.api.game.Sessions';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.api.game.GameAttribute.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.v1.api.game.GameAttribute.ValueCase = {
  VALUE_NOT_SET: 0,
  STRING_VALUE: 2,
  INT_VALUE: 3,
  FLOAT_VALUE: 4,
  BOOL_VALUE: 5
};

/**
 * @return {proto.v1.api.game.GameAttribute.ValueCase}
 */
proto.v1.api.game.GameAttribute.prototype.getValueCase = function() {
  return /** @type {proto.v1.api.game.GameAttribute.ValueCase} */(jspb.Message.computeOneofCase(this, proto.v1.api.game.GameAttribute.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.GameAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.GameAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.GameAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.GameAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    intValue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    floatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.GameAttribute}
 */
proto.v1.api.game.GameAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.GameAttribute;
  return proto.v1.api.game.GameAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.GameAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.GameAttribute}
 */
proto.v1.api.game.GameAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatValue(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.GameAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.GameAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.GameAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.GameAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string string_value = 2;
 * @return {string}
 */
proto.v1.api.game.GameAttribute.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.v1.api.game.GameAttribute.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.v1.api.game.GameAttribute.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.GameAttribute.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 int_value = 3;
 * @return {number}
 */
proto.v1.api.game.GameAttribute.prototype.getIntValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.v1.api.game.GameAttribute.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.clearIntValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.v1.api.game.GameAttribute.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.GameAttribute.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float float_value = 4;
 * @return {number}
 */
proto.v1.api.game.GameAttribute.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.v1.api.game.GameAttribute.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.v1.api.game.GameAttribute.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.GameAttribute.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool bool_value = 5;
 * @return {boolean}
 */
proto.v1.api.game.GameAttribute.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.v1.api.game.GameAttribute.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.GameAttribute} returns this
 */
proto.v1.api.game.GameAttribute.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.v1.api.game.GameAttribute.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.GameAttribute.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.api.game.Session.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.Session.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.Session.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.Session} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.Session.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.v1.api.game.GameAttribute.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 6, 0),
    data: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.Session}
 */
proto.v1.api.game.Session.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.Session;
  return proto.v1.api.game.Session.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.Session} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.Session}
 */
proto.v1.api.game.Session.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 4:
      var value = /** @type {!proto.v1.api.game.GameState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.v1.api.game.GameAttribute.deserializeBinaryFromReader, "", new proto.v1.api.game.GameAttribute());
         });
      break;
    case 6:
      var value = /** @type {!proto.v1.std.RegionEnum} */ (reader.readEnum());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.Session.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.Session.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.Session} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.Session.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.v1.api.game.GameAttribute.serializeBinaryToWriter);
  }
  f = /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.api.game.Session.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string game_id = 2;
 * @return {string}
 */
proto.v1.api.game.Session.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string user_ids = 3;
 * @return {!Array<string>}
 */
proto.v1.api.game.Session.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * optional GameState state = 4;
 * @return {!proto.v1.api.game.GameState}
 */
proto.v1.api.game.Session.prototype.getState = function() {
  return /** @type {!proto.v1.api.game.GameState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.v1.api.game.GameState} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, GameAttribute> attributes = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.v1.api.game.GameAttribute>}
 */
proto.v1.api.game.Session.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.v1.api.game.GameAttribute>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.v1.api.game.GameAttribute));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};


/**
 * optional v1.std.RegionEnum region = 6;
 * @return {!proto.v1.std.RegionEnum}
 */
proto.v1.api.game.Session.prototype.getRegion = function() {
  return /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.v1.std.RegionEnum} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.Session.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string data = 7;
 * @return {string}
 */
proto.v1.api.game.Session.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.setData = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.Session} returns this
 */
proto.v1.api.game.Session.prototype.clearData = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.Session.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.api.game.SessionCreate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.SessionCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.SessionCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.SessionCreate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.v1.api.game.GameAttribute.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 5, 0),
    data: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.SessionCreate}
 */
proto.v1.api.game.SessionCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.SessionCreate;
  return proto.v1.api.game.SessionCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.SessionCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.SessionCreate}
 */
proto.v1.api.game.SessionCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 3:
      var value = /** @type {!proto.v1.api.game.GameState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.v1.api.game.GameAttribute.deserializeBinaryFromReader, "", new proto.v1.api.game.GameAttribute());
         });
      break;
    case 5:
      var value = /** @type {!proto.v1.std.RegionEnum} */ (reader.readEnum());
      msg.setRegion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.SessionCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.SessionCreate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.SessionCreate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionCreate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.v1.api.game.GameAttribute.serializeBinaryToWriter);
  }
  f = /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string game_id = 1;
 * @return {string}
 */
proto.v1.api.game.SessionCreate.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string user_ids = 2;
 * @return {!Array<string>}
 */
proto.v1.api.game.SessionCreate.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * optional GameState state = 3;
 * @return {!proto.v1.api.game.GameState}
 */
proto.v1.api.game.SessionCreate.prototype.getState = function() {
  return /** @type {!proto.v1.api.game.GameState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.v1.api.game.GameState} value
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * map<string, GameAttribute> attributes = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.v1.api.game.GameAttribute>}
 */
proto.v1.api.game.SessionCreate.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.v1.api.game.GameAttribute>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.v1.api.game.GameAttribute));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};


/**
 * optional v1.std.RegionEnum region = 5;
 * @return {!proto.v1.std.RegionEnum}
 */
proto.v1.api.game.SessionCreate.prototype.getRegion = function() {
  return /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.v1.std.RegionEnum} value
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionCreate.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string data = 6;
 * @return {string}
 */
proto.v1.api.game.SessionCreate.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.setData = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionCreate} returns this
 */
proto.v1.api.game.SessionCreate.prototype.clearData = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionCreate.prototype.hasData = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.api.game.SessionUpdate.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.SessionUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.SessionUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.SessionUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.v1.api.game.GameAttribute.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 6, 0),
    data: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.SessionUpdate}
 */
proto.v1.api.game.SessionUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.SessionUpdate;
  return proto.v1.api.game.SessionUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.SessionUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.SessionUpdate}
 */
proto.v1.api.game.SessionUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 4:
      var value = /** @type {!proto.v1.api.game.GameState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.v1.api.game.GameAttribute.deserializeBinaryFromReader, "", new proto.v1.api.game.GameAttribute());
         });
      break;
    case 6:
      var value = /** @type {!proto.v1.std.RegionEnum} */ (reader.readEnum());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.SessionUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.SessionUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.SessionUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.v1.api.game.GameAttribute.serializeBinaryToWriter);
  }
  f = /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.api.game.SessionUpdate.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string game_id = 2;
 * @return {string}
 */
proto.v1.api.game.SessionUpdate.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string user_ids = 3;
 * @return {!Array<string>}
 */
proto.v1.api.game.SessionUpdate.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * optional GameState state = 4;
 * @return {!proto.v1.api.game.GameState}
 */
proto.v1.api.game.SessionUpdate.prototype.getState = function() {
  return /** @type {!proto.v1.api.game.GameState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.v1.api.game.GameState} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, GameAttribute> attributes = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.v1.api.game.GameAttribute>}
 */
proto.v1.api.game.SessionUpdate.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.v1.api.game.GameAttribute>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.v1.api.game.GameAttribute));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};


/**
 * optional v1.std.RegionEnum region = 6;
 * @return {!proto.v1.std.RegionEnum}
 */
proto.v1.api.game.SessionUpdate.prototype.getRegion = function() {
  return /** @type {!proto.v1.std.RegionEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.v1.std.RegionEnum} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionUpdate.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string data = 7;
 * @return {string}
 */
proto.v1.api.game.SessionUpdate.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.setData = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionUpdate} returns this
 */
proto.v1.api.game.SessionUpdate.prototype.clearData = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionUpdate.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.SessionGet.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.SessionGet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.SessionGet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionGet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.SessionGet}
 */
proto.v1.api.game.SessionGet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.SessionGet;
  return proto.v1.api.game.SessionGet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.SessionGet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.SessionGet}
 */
proto.v1.api.game.SessionGet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.SessionGet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.SessionGet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.SessionGet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionGet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.api.game.SessionGet.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionGet} returns this
 */
proto.v1.api.game.SessionGet.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionGet} returns this
 */
proto.v1.api.game.SessionGet.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionGet.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string game_id = 2;
 * @return {string}
 */
proto.v1.api.game.SessionGet.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionGet} returns this
 */
proto.v1.api.game.SessionGet.prototype.setGameId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.v1.api.game.SessionGet} returns this
 */
proto.v1.api.game.SessionGet.prototype.clearGameId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.api.game.SessionGet.prototype.hasGameId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.SessionDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.SessionDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.SessionDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.SessionDelete}
 */
proto.v1.api.game.SessionDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.SessionDelete;
  return proto.v1.api.game.SessionDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.SessionDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.SessionDelete}
 */
proto.v1.api.game.SessionDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.SessionDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.SessionDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.SessionDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.SessionDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.api.game.SessionDelete.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionDelete} returns this
 */
proto.v1.api.game.SessionDelete.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string game_id = 2;
 * @return {string}
 */
proto.v1.api.game.SessionDelete.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.api.game.SessionDelete} returns this
 */
proto.v1.api.game.SessionDelete.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.api.game.Sessions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.api.game.Sessions.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.api.game.Sessions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.api.game.Sessions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.Sessions.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionsList: jspb.Message.toObjectList(msg.getSessionsList(),
    proto.v1.api.game.Session.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.api.game.Sessions}
 */
proto.v1.api.game.Sessions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.api.game.Sessions;
  return proto.v1.api.game.Sessions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.api.game.Sessions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.api.game.Sessions}
 */
proto.v1.api.game.Sessions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.api.game.Session;
      reader.readMessage(value,proto.v1.api.game.Session.deserializeBinaryFromReader);
      msg.addSessions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.api.game.Sessions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.api.game.Sessions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.api.game.Sessions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.api.game.Sessions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.api.game.Session.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Session sessions = 1;
 * @return {!Array<!proto.v1.api.game.Session>}
 */
proto.v1.api.game.Sessions.prototype.getSessionsList = function() {
  return /** @type{!Array<!proto.v1.api.game.Session>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.api.game.Session, 1));
};


/**
 * @param {!Array<!proto.v1.api.game.Session>} value
 * @return {!proto.v1.api.game.Sessions} returns this
*/
proto.v1.api.game.Sessions.prototype.setSessionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.api.game.Session=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.api.game.Session}
 */
proto.v1.api.game.Sessions.prototype.addSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.api.game.Session, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.api.game.Sessions} returns this
 */
proto.v1.api.game.Sessions.prototype.clearSessionsList = function() {
  return this.setSessionsList([]);
};


/**
 * @enum {number}
 */
proto.v1.api.game.GameState = {
  STATE_CREATED: 0,
  STATE_WAITING: 1,
  STATE_STARTED: 2,
  STATE_FINISHED: 3,
  STATE_DELETED: 4,
  STATE_PAUSED: 5,
  STATE_QUEUED: 6
};

goog.object.extend(exports, proto.v1.api.game);
