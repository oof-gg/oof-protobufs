/**
 * @fileoverview gRPC-Web generated client stub for v1.api.game
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.2
// source: v1/api/game/game_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as v1_api_game_entity_pb from '../../../v1/api/game/entity_pb'; // proto import: "v1/api/game/entity.proto"
import * as v1_api_game_event_pb from '../../../v1/api/game/event_pb'; // proto import: "v1/api/game/event.proto"
import * as v1_api_game_join_leave_pb from '../../../v1/api/game/join_leave_pb'; // proto import: "v1/api/game/join_leave.proto"
import * as v1_api_game_session_pb from '../../../v1/api/game/session_pb'; // proto import: "v1/api/game/session.proto"
import * as v1_std_responses_pb from '../../../v1/std/responses_pb'; // proto import: "v1/std/responses.proto"


export class GameServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorJoinLeave = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/JoinLeave',
    grpcWeb.MethodType.UNARY,
    v1_api_game_join_leave_pb.JoinLeaveGame,
    v1_api_game_session_pb.Session,
    (request: v1_api_game_join_leave_pb.JoinLeaveGame) => {
      return request.serializeBinary();
    },
    v1_api_game_session_pb.Session.deserializeBinary
  );

  joinLeave(
    request: v1_api_game_join_leave_pb.JoinLeaveGame,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_session_pb.Session>;

  joinLeave(
    request: v1_api_game_join_leave_pb.JoinLeaveGame,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void): grpcWeb.ClientReadableStream<v1_api_game_session_pb.Session>;

  joinLeave(
    request: v1_api_game_join_leave_pb.JoinLeaveGame,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/JoinLeave',
        request,
        metadata || {},
        this.methodDescriptorJoinLeave,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/JoinLeave',
    request,
    metadata || {},
    this.methodDescriptorJoinLeave);
  }

  methodDescriptorCreateSession = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/CreateSession',
    grpcWeb.MethodType.UNARY,
    v1_api_game_session_pb.SessionCreate,
    v1_api_game_session_pb.Session,
    (request: v1_api_game_session_pb.SessionCreate) => {
      return request.serializeBinary();
    },
    v1_api_game_session_pb.Session.deserializeBinary
  );

  createSession(
    request: v1_api_game_session_pb.SessionCreate,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_session_pb.Session>;

  createSession(
    request: v1_api_game_session_pb.SessionCreate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void): grpcWeb.ClientReadableStream<v1_api_game_session_pb.Session>;

  createSession(
    request: v1_api_game_session_pb.SessionCreate,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/CreateSession',
        request,
        metadata || {},
        this.methodDescriptorCreateSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/CreateSession',
    request,
    metadata || {},
    this.methodDescriptorCreateSession);
  }

  methodDescriptorGetSession = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/GetSession',
    grpcWeb.MethodType.UNARY,
    v1_api_game_session_pb.SessionGet,
    v1_api_game_session_pb.Sessions,
    (request: v1_api_game_session_pb.SessionGet) => {
      return request.serializeBinary();
    },
    v1_api_game_session_pb.Sessions.deserializeBinary
  );

  getSession(
    request: v1_api_game_session_pb.SessionGet,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_session_pb.Sessions>;

  getSession(
    request: v1_api_game_session_pb.SessionGet,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Sessions) => void): grpcWeb.ClientReadableStream<v1_api_game_session_pb.Sessions>;

  getSession(
    request: v1_api_game_session_pb.SessionGet,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Sessions) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/GetSession',
        request,
        metadata || {},
        this.methodDescriptorGetSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/GetSession',
    request,
    metadata || {},
    this.methodDescriptorGetSession);
  }

  methodDescriptorUpdateSession = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/UpdateSession',
    grpcWeb.MethodType.UNARY,
    v1_api_game_session_pb.SessionUpdate,
    v1_api_game_session_pb.Session,
    (request: v1_api_game_session_pb.SessionUpdate) => {
      return request.serializeBinary();
    },
    v1_api_game_session_pb.Session.deserializeBinary
  );

  updateSession(
    request: v1_api_game_session_pb.SessionUpdate,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_session_pb.Session>;

  updateSession(
    request: v1_api_game_session_pb.SessionUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void): grpcWeb.ClientReadableStream<v1_api_game_session_pb.Session>;

  updateSession(
    request: v1_api_game_session_pb.SessionUpdate,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_session_pb.Session) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/UpdateSession',
        request,
        metadata || {},
        this.methodDescriptorUpdateSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/UpdateSession',
    request,
    metadata || {},
    this.methodDescriptorUpdateSession);
  }

  methodDescriptorDeleteSession = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/DeleteSession',
    grpcWeb.MethodType.UNARY,
    v1_api_game_session_pb.SessionDelete,
    v1_std_responses_pb.StandardResponse,
    (request: v1_api_game_session_pb.SessionDelete) => {
      return request.serializeBinary();
    },
    v1_std_responses_pb.StandardResponse.deserializeBinary
  );

  deleteSession(
    request: v1_api_game_session_pb.SessionDelete,
    metadata?: grpcWeb.Metadata | null): Promise<v1_std_responses_pb.StandardResponse>;

  deleteSession(
    request: v1_api_game_session_pb.SessionDelete,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_std_responses_pb.StandardResponse) => void): grpcWeb.ClientReadableStream<v1_std_responses_pb.StandardResponse>;

  deleteSession(
    request: v1_api_game_session_pb.SessionDelete,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_std_responses_pb.StandardResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/DeleteSession',
        request,
        metadata || {},
        this.methodDescriptorDeleteSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/DeleteSession',
    request,
    metadata || {},
    this.methodDescriptorDeleteSession);
  }

  methodDescriptorCreateEntity = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/CreateEntity',
    grpcWeb.MethodType.UNARY,
    v1_api_game_entity_pb.EntityCreateRequest,
    v1_api_game_entity_pb.EntityCreateResponse,
    (request: v1_api_game_entity_pb.EntityCreateRequest) => {
      return request.serializeBinary();
    },
    v1_api_game_entity_pb.EntityCreateResponse.deserializeBinary
  );

  createEntity(
    request: v1_api_game_entity_pb.EntityCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_entity_pb.EntityCreateResponse>;

  createEntity(
    request: v1_api_game_entity_pb.EntityCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityCreateResponse) => void): grpcWeb.ClientReadableStream<v1_api_game_entity_pb.EntityCreateResponse>;

  createEntity(
    request: v1_api_game_entity_pb.EntityCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityCreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/CreateEntity',
        request,
        metadata || {},
        this.methodDescriptorCreateEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/CreateEntity',
    request,
    metadata || {},
    this.methodDescriptorCreateEntity);
  }

  methodDescriptorGetEntity = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/GetEntity',
    grpcWeb.MethodType.UNARY,
    v1_api_game_entity_pb.EntityGetRequest,
    v1_api_game_entity_pb.EntityGetResponse,
    (request: v1_api_game_entity_pb.EntityGetRequest) => {
      return request.serializeBinary();
    },
    v1_api_game_entity_pb.EntityGetResponse.deserializeBinary
  );

  getEntity(
    request: v1_api_game_entity_pb.EntityGetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_entity_pb.EntityGetResponse>;

  getEntity(
    request: v1_api_game_entity_pb.EntityGetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityGetResponse) => void): grpcWeb.ClientReadableStream<v1_api_game_entity_pb.EntityGetResponse>;

  getEntity(
    request: v1_api_game_entity_pb.EntityGetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityGetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/GetEntity',
        request,
        metadata || {},
        this.methodDescriptorGetEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/GetEntity',
    request,
    metadata || {},
    this.methodDescriptorGetEntity);
  }

  methodDescriptorUpdateEntity = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/UpdateEntity',
    grpcWeb.MethodType.UNARY,
    v1_api_game_entity_pb.EntityUpdateRequest,
    v1_api_game_entity_pb.EntityUpdateResponse,
    (request: v1_api_game_entity_pb.EntityUpdateRequest) => {
      return request.serializeBinary();
    },
    v1_api_game_entity_pb.EntityUpdateResponse.deserializeBinary
  );

  updateEntity(
    request: v1_api_game_entity_pb.EntityUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_entity_pb.EntityUpdateResponse>;

  updateEntity(
    request: v1_api_game_entity_pb.EntityUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityUpdateResponse) => void): grpcWeb.ClientReadableStream<v1_api_game_entity_pb.EntityUpdateResponse>;

  updateEntity(
    request: v1_api_game_entity_pb.EntityUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/UpdateEntity',
        request,
        metadata || {},
        this.methodDescriptorUpdateEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/UpdateEntity',
    request,
    metadata || {},
    this.methodDescriptorUpdateEntity);
  }

  methodDescriptorDeleteEntity = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/DeleteEntity',
    grpcWeb.MethodType.UNARY,
    v1_api_game_entity_pb.EntityDeleteRequest,
    v1_api_game_entity_pb.EntityDeleteResponse,
    (request: v1_api_game_entity_pb.EntityDeleteRequest) => {
      return request.serializeBinary();
    },
    v1_api_game_entity_pb.EntityDeleteResponse.deserializeBinary
  );

  deleteEntity(
    request: v1_api_game_entity_pb.EntityDeleteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_api_game_entity_pb.EntityDeleteResponse>;

  deleteEntity(
    request: v1_api_game_entity_pb.EntityDeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityDeleteResponse) => void): grpcWeb.ClientReadableStream<v1_api_game_entity_pb.EntityDeleteResponse>;

  deleteEntity(
    request: v1_api_game_entity_pb.EntityDeleteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_api_game_entity_pb.EntityDeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/v1.api.game.GameService/DeleteEntity',
        request,
        metadata || {},
        this.methodDescriptorDeleteEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/v1.api.game.GameService/DeleteEntity',
    request,
    metadata || {},
    this.methodDescriptorDeleteEntity);
  }

  methodDescriptorWatchQueue = new grpcWeb.MethodDescriptor(
    '/v1.api.game.GameService/WatchQueue',
    grpcWeb.MethodType.SERVER_STREAMING,
    v1_api_game_session_pb.Session,
    v1_api_game_session_pb.Session,
    (request: v1_api_game_session_pb.Session) => {
      return request.serializeBinary();
    },
    v1_api_game_session_pb.Session.deserializeBinary
  );

  watchQueue(
    request: v1_api_game_session_pb.Session,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<v1_api_game_session_pb.Session> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/v1.api.game.GameService/WatchQueue',
      request,
      metadata || {},
      this.methodDescriptorWatchQueue);
  }

}

